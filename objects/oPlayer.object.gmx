<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-40</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayer_Mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init
vsp = 0
hsp = 0
App = false
app = 0

//tweakables
Speed = 2

JumpSpeed = 4

//JumpSpeed = 4


image_speed = 0.2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//time stuff
app += global.time 
if app &gt;= 1 { App = true app = 0 } else { App = false }

//inputs
up = keyboard_check_pressed(ord('W')) + keyboard_check_pressed(vk_space) + keyboard_check_pressed(vk_up)
left = keyboard_check(ord('A')) + keyboard_check(vk_left)
right = keyboard_check(ord('D')) + keyboard_check(vk_right)

/*
//vomiting
if mouse_check_button(mb_left) and App {

//knockback yo
motion_add_cus(global.Grav * .75,point_direction(x,y,mouse_x,mouse_y)+180)


repeat(ceil(random_range(7,24))) {
        with (instance_create(x,y,oBlood)) {
            dir = point_direction(x,y,mouse_x,mouse_y) + random_range(-5,5)
            spd = random_range(8,14)
            hsp = lengthdir_x(spd,dir)
            vsp = lengthdir_y(spd,dir)
            image_blend = make_colour_rgb(106,random_range(151,230),79) //181
            image_alpha = random_range(.6,1.5)
            if image_alpha &gt; 1 { image_alpha = 1 }
        }
    }

}
*/

//vert collision
if place_meeting(x,y + vsp ,oSolid) 
{ 
    vsp = 0 
} 
else 
{ 
    if App { vsp += global.Grav } 
}

//jumping

if up and place_meeting(x,y + 2,oSolid) 
{ 
    vsp = -JumpSpeed 
}

//autojump when you land on something
Stomp = collision_rectangle(x-5,y+1,x+3,y+5,oStompable,true,true)
if instance_exists(Stomp) and vsp &gt; 0
{
    with (Stomp) { HP -= 1 }
    vsp = -JumpSpeed 
}

//walking and horisontal collision COLLISION NEEDS WORK I GOT IT


if right 
{

    if !place_meeting( x + Speed,y - 1 ,oSolid ) 
    { 
    if hsp &lt; Speed { hsp += Speed * .2 } 
    image_xscale = 1
    } else { hsp = 0 }
}

if left 
{
    if !place_meeting( x - Speed,y - 1 ,oSolid ) 
    { 
    if hsp &gt; -Speed { hsp -= Speed * .2 }
    image_xscale = -1
    } else { hsp = 0 }
}

if !right and !left
{
    //drag
    if place_meeting(x,y+2,oSolid){
        //if i'm touching the floor slow me down by this number -1
        //ex:( if you input .75 you will slow down by 25% room_speed (60) times a second )
        hsp = hsp * .6
    }
    else {
        hsp = hsp * .95
    }
    
    //i have to do collision here too to fix shit so :/
    if place_meeting(x - Speed,y - 1,oSolid) {
        hsp = 0 x += 1
    }
    if place_meeting(x + Speed,y - 1,oSolid) {
        hsp = 0 x -= 1
    }
    
}

//animation stuff
if hsp &gt; .2 or hsp &lt; -.2
{
    if vsp == 0 //and sprite_index != spr_player_death {
    {
        sprite_index = spr_player_run
    }
} else {
    if vsp == 0 //and sprite_index != spr_player_death
    {
    sprite_index = spr_player_idle
    }
}
if vsp &lt; 0
{
    sprite_index = spr_player_up
}
if vsp &gt; 0 
{
    sprite_index = spr_player_down
}

//Apply speeds and such

x += hsp * global.time
y += vsp * global.time
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if global.debug {
    
    draw_set_colour(c_aqua);
    //vv true center of player
    draw_circle(x-1,y-1,2,true)
    //Bounding box of player
    draw_rectangle(x+3,y+4,x-5,y-6,true)
    
    draw_set_colour(c_orange);
    //stomping on things mask
    draw_rectangle(x-5,y+1,x+3,y+5,true)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
