<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayer_Mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Init
vsp = 0
hsp = 0

//tweakables
Speed = 2
JumpSpeed = 3.15

image_speed = 0.2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//inputs
up = keyboard_check_pressed(ord('W')) + keyboard_check_pressed(vk_space) + keyboard_check_pressed(vk_up)
left = keyboard_check(ord('A')) + keyboard_check(vk_left)
right = keyboard_check(ord('D')) + keyboard_check(vk_right)

//vert collision
if place_meeting(x,y + vsp ,oSolid) { vsp = 0 } else { vsp += global.Grav }

//jumping

if up and place_meeting(x,y + 3,oSolid) { vsp = -JumpSpeed }

//walking and horisontal collision COLLISION NEEDS WORK I GOT IT

hsp = 0

if right 
{

    if !place_meeting( x + Speed,y - 2 ,oSolid ) 
    { 
    hsp = Speed 
    image_xscale = 1
    }
}

if left 
{
    if !place_meeting( x - Speed,y - 2 ,oSolid ) 
    { 
    hsp = -Speed
    image_xscale = -1
    }
}

// HEY BEN use this for animation
if hsp != 0 and vsp == 0 //and sprite_index != spr_player_death
{
    sprite_index = spr_player_run
}
if hsp = 0 and vsp == 0 //and sprite_index != spr_player_death
{
    sprite_index = spr_player_idle
}
if vsp &lt; 0
{
    sprite_index = spr_player_up
}
if vsp &gt; 0 
{
    sprite_index = spr_player_down
}

//Apply speeds and such

x += hsp * global.time
y += vsp * global.time
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
